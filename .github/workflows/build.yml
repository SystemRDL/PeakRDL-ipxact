on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 3.5
          - 3.6
          - 3.7
          - 3.8
          - 3.9

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pytest pytest-cov coveralls
          sudo apt install libxml2-utils

      - name: Install
        run: |
          python setup.py install
          test/schema/1685-2014/download_schema.sh
          test/schema/1685-2009/download_schema.sh

      - name: Test
        run: |
          cd test
          pytest --cov=peakrdl

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd test
          coveralls

#-------------------------------------------------------------------------------
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install -U pylint

      - name: Install
        run: |
          python setup.py install

      - name: Run Lint
        run: |
          pylint --rcfile test/pylint.rc peakrdl

#-------------------------------------------------------------------------------
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install -U mypy

      - name: Type Check
        run: |
          mypy --config-file test/mypy.ini peakrdl

#-------------------------------------------------------------------------------
  build_sdist:
    needs:
      - test
      - lint
      - mypy
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.8

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

#-------------------------------------------------------------------------------
  deploy:
    needs:
      - build_sdist

    runs-on: ubuntu-latest

    # Only publish when a GitHub Release is created.
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
